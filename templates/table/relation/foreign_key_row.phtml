<?php
use PhpMyAdmin\Sanitize;
use PhpMyAdmin\Table;
use PhpMyAdmin\Url;
use PhpMyAdmin\Util;
?>
<tr>
    <!-- Drop key anchor -->
    <td>
        <?php
        $js_msg = '';
        $this_params = null;
        if (isset($one_key['constraint'])) {
            $drop_fk_query = 'ALTER TABLE ' . Util::backquote($table)
                . ' DROP FOREIGN KEY '
                . Util::backquote($one_key['constraint']) . ';';
            $this_params = $GLOBALS['url_params'];
            $this_params['goto'] = 'tbl_relation.php';
            $this_params['back'] = 'tbl_relation.php';
            $this_params['sql_query'] = $drop_fk_query;
            $this_params['message_to_show'] = sprintf(
                __('Foreign key constraint %s has been dropped'),
                $one_key['constraint']
            );
            $js_msg = Sanitize::jsFormat(
                'ALTER TABLE ' . $table
                . ' DROP FOREIGN KEY '
                . $one_key['constraint'] . ';'
            );
        }
        ?>
        <?php if (isset($one_key['constraint'])): ?>
            <input type="hidden"
                   class="drop_foreign_key_msg"
                   value="<?= $js_msg; ?>" />
            <a class="drop_foreign_key_anchor ajax"
               href="sql.php<?= Url::getCommon($this_params); ?>" >
                <?= Util::getIcon('b_drop.png', __('Drop')); ?>
            </a>
        <?php endif; ?>
    </td>
    <td>
        <span class="formelement clearfloat">
            <input type="text" name="constraint_name[<?= $i; ?>]"
                   value="<?= (isset($one_key['constraint'])) ?
                       htmlspecialchars($one_key['constraint'])
                       : ''
                       ?>"
                   placeholder="<?= __('Constraint name'); ?>"
                   maxlength="64" />
        </span>
        <div class="floatleft">
            <?php
            // For ON DELETE and ON UPDATE, the default action
            // is RESTRICT as per MySQL doc; however, a SHOW CREATE TABLE
            // won't display the clause if it's set as RESTRICT.
            $on_delete = isset($one_key['on_delete'])
                ? $one_key['on_delete'] : 'RESTRICT';
            $on_update = isset($one_key['on_update'])
                ? $one_key['on_update'] : 'RESTRICT';
            ?>
            <span class="formelement">
                <?= PhpMyAdmin\Template::get('table/relation/dropdown_generate')->render(
                    array(
                        'dropdown_question' => 'ON DELETE',
                        'select_name' => 'on_delete[' . $i . ']',
                        'choices' => $options_array,
                        'selected_value' => $on_delete
                    )
                ); ?>
            </span>
            <span class="formelement">
                <?= PhpMyAdmin\Template::get('table/relation/dropdown_generate')->render(
                    array(
                        'dropdown_question' => 'ON UPDATE',
                        'select_name' => 'on_update[' . $i . ']',
                        'choices' => $options_array,
                        'selected_value' => $on_update
                    )
                ); ?>
            </span>
        </div>
    </td>
    <td>
        <?php if (isset($one_key['index_list'])): ?>
            <?php foreach ($one_key['index_list'] as $key => $column): ?>
                <span class="formelement clearfloat">
                    <?= PhpMyAdmin\Template::get('table/relation/dropdown_generate')->render(
                        array(
                            'dropdown_question' => '',
                            'select_name' => 'foreign_key_fields_name[' . $i . '][]',
                            'choices' => $column_array,
                            'selected_value' => $column
                        )
                    ); ?>
                </span>
            <?php endforeach; ?>
        <?php else: ?>
            <span class="formelement clearfloat">
                <?= PhpMyAdmin\Template::get('table/relation/dropdown_generate')->render(
                    array(
                        'dropdown_question' => '',
                        'select_name' => 'foreign_key_fields_name[' . $i . '][]',
                        'choices' => $column_array,
                        'selected_value' => ''
                    )
                ); ?>
            </span>
        <?php endif; ?>
        <a class="formelement clearfloat add_foreign_key_field"
           href=""
           data-index="<?= $i; ?>">
            <?= __('+ Add column'); ?>
        </a>
    </td>
    <?php
    $foreign_table = false;
    // foreign database dropdown
    $foreign_db = (isset($one_key['ref_db_name'])) ? $one_key['ref_db_name'] : $db;

    $tables = array();
    if ($foreign_db) {
        $foreign_table = isset($one_key['ref_table_name'])
            ? $one_key['ref_table_name'] : false;

        $tables = PhpMyAdmin\Relation::getTables($foreign_db, $tbl_storage_engine);
    }
    ?>
    <td>
        <span class="formelement clearfloat">
            <?= PhpMyAdmin\Template::get('table/relation/relational_dropdown')->render(
                array(
                    'name' => 'destination_foreign_db[' . $i . ']',
                    'title' => __('Database'),
                    'values' => $GLOBALS['dblist']->databases,
                    'foreign' => $foreign_db
                )
            ); ?>
    </td>
    <td>
        <span class="formelement clearfloat">
            <?= PhpMyAdmin\Template::get('table/relation/relational_dropdown')->render(
                array(
                    'name' => 'destination_foreign_table[' . $i . ']',
                    'title' => __('Table'),
                    'values' => $tables,
                    'foreign' => $foreign_table
                )
            ); ?>
        </span>
    </td>
    <td>
        <?php if ($foreign_db && $foreign_table): ?>
            <?php foreach ($one_key['ref_index_list'] as $foreign_column): ?>
                <?php
                $table_obj = new Table($foreign_table, $foreign_db);
                $columns = $table_obj->getUniqueColumns(false, false);
                ?>
                <span class="formelement clearfloat">
                    <?= PhpMyAdmin\Template::get('table/relation/relational_dropdown')->render(
                        array(
                            'name' => 'destination_foreign_column[' . $i . '][]',
                            'title' => __('Column'),
                            'values' => $columns,
                            'foreign' => $foreign_column
                        )
                    ); ?>
                </span>
            <?php endforeach; ?>
        <?php else: ?>
            <span class="formelement clearfloat">
                <?= PhpMyAdmin\Template::get('table/relation/relational_dropdown')->render(
                    array(
                        'name' => 'destination_foreign_column[' . $i . '][]',
                        'title' => __('Column'),
                        'values' => array(),
                        'foreign' => ''
                    )
                ); ?>
            </span>
        <?php endif; ?>
    </td>
</tr>
